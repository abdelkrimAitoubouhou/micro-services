version: "3.9"

services:
  eureka-service:
    build: ./discovery
    container_name: eureka-service
    ports:
      - '8761:8761'
    expose:
       - '8761'
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8761/actuator/health" ]
      interval: 10s
      retries: 4

  inv-postgres-db:
    image: postgres
    container_name: inv-postgres-db
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: user
      POSTGRES_DB: inventory-db
    volumes:
      - ./data/docker-inventory-db:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U user -d inventory-db" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  ms-inventory:
    build: ./ms-inventory
    container_name: ms-inventory
    ports:
      - "8082:8082"
    expose:
      - "8082"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://inv-postgres-db:5432/inventory-db
      - SPRING_DATASOURCE_USERNAME=user
      - SPRING_DATASOURCE_PASSWORD=user
      - DISCOVERY_SERVICE_URL=http://eureka-service:8761/eureka
    depends_on:
      eureka-service:
        condition: service_healthy
      inv-postgres-db:
        condition: service_started
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres-data:
